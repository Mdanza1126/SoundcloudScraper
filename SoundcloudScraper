import requests
import soundcloud
import pandas as pd
from bs4 import BeautifulSoup
from flask import Flask, request, jsonify
import openpyxl
import pytest


class SoundcloudScraper:
    def __init__(self, client_id):
        self.client_id = client_id
        self.client = soundcloud.Client(client_id=self.client_id)

    def get_track_info(self, track_id):
        track = self.client.get('/tracks/{}'.format(track_id))
        return {
            'title': track.title,
            'description': track.description,
            'genre': track.genre,
            'tags': track.tag_list,
            'plays': track.playback_count,
            'likes': track.likes_count,
            'duration': track.duration / 1000,
            'comments': track.comment_count,
            'username': track.user['username'],
            'user_followers': track.user['followers_count'],
            'user_followings': track.user['followings_count'],
            'user_tracks': track.user['track_count'],
            'user_playlists': track.user['playlist_count'],
            'date_uploaded': track.created_at,
            'date_modified': track.last_modified,
            'track_url': track.permalink_url
        }

    def search(self, query):
        tracks = self.client.get('/tracks', q=query)
        return [{
            'title': track.title,
            'genre': track.genre,
            'tags': track.tag_list,
            'plays': track.playback_count,
            'likes': track.likes_count,
            'comments': track.comment_count,
            'duration': track.duration / 1000,
            'username': track.user['username'],
            'user_followers': track.user['followers_count'],
            'user_followings': track.user['followings_count'],
            'user_tracks': track.user['track_count'],
            'user_playlists': track.user['playlist_count'],
            'date_uploaded': track.created_at,
            'date_modified': track.last_modified,
            'track_url': track.permalink_url
        } for track in tracks]


def get_track_ids(query, limit):
    sc = SoundcloudScraper(client_id='YOUR_CLIENT_ID')
    tracks = sc.search(query)
    sorted_tracks = sorted(tracks, key=lambda k: k['plays'], reverse=True)
    return [track['track_url'] for track in sorted_tracks[:limit]]


def scrape_data(track_id):
    sc = SoundcloudScraper(client_id='YOUR_CLIENT_ID')
    return sc.get_track_info(track_id)


def get_data(query, limit):
    track_ids = get_track_ids(query=query, limit=limit)
    data = [scrape_data(track_id) for track_id in track_ids]
    df = pd.DataFrame(data)
    return df


def export_to_excel(df, file_name):
    writer = pd.ExcelWriter(file_name, engine='openpyxl')
    df.to_excel(writer, sheet_name='Sheet1', index=False)
    workbook = writer.book
    worksheet = writer.sheets['Sheet1']
    for i, col in enumerate(df.columns):
        column_len = df[col].astype(str).str.len().max()
        column_len = max(column_len, len(col)) + 2
        worksheet.column_dimensions[openpyxl.utils.get_column_letter(i + 1)].width = column_len
    writer.save()


app = Flask(__name__)

@app.route('/')
def home():
    return 'Welcome to Soundcloud Scraper API'

@app.route('/api/scrape', methods=['GET'])
def api_scrape():
    query = request.args.get('query')
    limit = int(request.args.get('limit'))
    file_name = request.args
